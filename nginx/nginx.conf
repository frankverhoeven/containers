# Maximum number of connections = worker_processes * worker_connections
worker_processes auto;

# Log errors and warnings to this file
error_log /dev/stderr warn;

user nginx nginx;

# Maximum number of open files per worker process.
# Should be > worker_connections.
worker_rlimit_nofile 8192;

events {
  # Should be < worker_rlimit_nofile.
  worker_connections 8000;
}

# The file storing the process ID of the main process
pid /run/nginx.pid;

# Free some CPU cycles
timer_resolution 500ms;

http {
    include       cloudflare;
    include       mime.types;
    default_type  application/octet-stream;

    add_header X-Frame-Options SAMEORIGIN;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";

	log_format main_timed '$remote_addr - $remote_user [$time_local] '
                          '"$request_method $scheme://$host$request_uri $server_protocol" $status $body_bytes_sent '
                          '"$http_referer" "$http_user_agent" '
                          '$request_time';

    access_log /dev/stdout main_timed;
    error_log /dev/stderr;

     # Hide sensitive information
    server_tokens off;
    autoindex off;

    # copies data between one FD and other from within the kernel
    # faster than read() + write()
    sendfile on;

    # the sendfile_max_chunk directive to limit the amount of data transferred in a single sendfile() call
    sendfile_max_chunk 512k;

    # send headers in one piece, it is better than sending them one by one
    tcp_nopush on;

    # don't buffer data sent, good for small data bursts in real time
    tcp_nodelay on;

    gzip on;
    # gzip_static on;
    gzip_min_length 1000;
    gzip_comp_level 6;
    gzip_vary on;
    gzip_disable msie6;
    gzip_proxied expired no-cache no-store private auth;
    gzip_types
        # text/html is always compressed by HttpGzipModule
        text/css
        text/javascript
        text/xml
        text/plain
        text/x-component
        application/javascript
        application/x-javascript
        application/json
        application/xml
        application/rss+xml
        application/atom+xml
        font/truetype
        font/opentype
        application/vnd.ms-fontobject
        image/svg+xml;

    # allow the server to close connection on non responding client, this will free up memory
    reset_timedout_connection on;

    # request timed out -- default 60
    client_body_timeout 30;

    # if client stop responding, free up memory -- default 60
    send_timeout 10;

    # server will close connection after this time -- default 75
    keepalive_timeout 75;

    map $http_upgrade $connection_upgrade {
        default upgrade;
        ''      close;
    }

    # Write temporary files to /tmp so they can be created as a non-privileged user
    client_body_temp_path /tmp/client_temp;
    proxy_temp_path /tmp/proxy_temp_path;
    fastcgi_temp_path /tmp/fastcgi_temp;
    uwsgi_temp_path /tmp/uwsgi_temp;
    scgi_temp_path /tmp/scgi_temp;

    # Include custom configurations
    include conf.d/*.conf;
}
